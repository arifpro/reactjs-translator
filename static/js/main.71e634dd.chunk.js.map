{"version":3,"sources":["styles.js","components/Field.js","components/Languages.js","components/Translate.js","App.js","index.js"],"names":["makeStyles","container","margin","input","label","fontWeight","title","marginTop","Field","value","onChange","styles","useStyles","className","e","target","LANGUAGES","Languages","language","onLanguageChange","undefined","languageConfig","find","l","Error","useState","open","setOpen","onClick","map","href","onSelect","doTranslation","languageCode","cancelToken","a","axios","post","q","token","data","translations","translatedText","Translate","text","translated","setTranslated","useEffect","CancelToken","source","then","cancel","err","console","log","App","setText","setLanguage","ReactDOM","render","document","getElementById"],"mappings":"wLAGeA,eAAW,iBAAO,CAC7BC,UAAW,CACPC,OAAQ,aAEZC,MAAO,CACHD,OAAQ,SAEZE,MAAO,CACHC,WAAY,KAEhBC,MAAO,CACHC,UAAW,YCIJC,EAfD,SAAC,GAAgC,IAA9BJ,EAA6B,EAA7BA,MAAOK,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACrBC,EAASC,IAEf,OACI,gCACI,uBAAOC,UAAWF,EAAOP,MAAzB,SAAiCA,IACjC,uBACIS,UAAU,QACVJ,MAAOA,EACPC,SAAU,SAAAI,GAAC,OAAIJ,EAASI,EAAEC,OAAON,cCV3CO,EAAY,CAChB,CAAEZ,MAAO,YAAaK,MAAO,MAC7B,CAAEL,MAAO,SAAUK,MAAO,MAC1B,CAAEL,MAAO,UAAWK,MAAO,MAC3B,CAAEL,MAAO,SAAUK,MAAO,MAC1B,CAAEL,MAAO,QAASK,MAAO,MACzB,CAAEL,MAAO,WAAYK,MAAO,MAC5B,CAAEL,MAAO,aAAcK,MAAO,MAC9B,CAAEL,MAAO,UAAWK,MAAO,MAC3B,CAAEL,MAAO,qBAAsBK,MAAO,SACtC,CAAEL,MAAO,UAAWK,MAAO,MAC3B,CAAEL,MAAO,UAAWK,MAAO,MAC3B,CAAEL,MAAO,OAAQK,MAAO,OAqDXQ,EAlDG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,sBACVC,IAAbF,IACAA,EAAW,MAGf,IAAMG,EAAiBL,EAAUM,MAAK,SAAAC,GAAC,OAAIA,EAAEd,QAAUS,KAEvD,IAAKG,EACD,MAAM,IAAIG,MAAJ,iCAAoCN,EAApC,MARwC,MAW1BO,oBAAS,GAXiB,mBAW3CC,EAX2C,KAWrCC,EAXqC,KAkBlD,OACI,gCACI,uBAAOd,UAAU,QAAjB,6BACA,sBAAKA,UAAS,mBAAca,GAAQ,aAApC,UACI,qBAAKb,UAAU,mBAAf,SACI,wBAAQA,UAAU,SAASe,QAAS,kBAAMD,GAASD,IAAnD,SACI,iCAAOL,EAAejB,MAAtB,IAA8B,gBAMtC,qBAAKS,UAAU,gBAAf,SACI,qBAAKA,UAAU,mBAAf,SAEQG,EAAUa,KAAI,gBAAGzB,EAAH,EAAGA,MAAOK,EAAV,EAAUA,MAAV,OACV,mBACIqB,KAAK,IACLF,QAAS,kBAvBxB,SAAAV,GACbS,GAAQ,GACRR,EAAiBD,GAqB0Ba,CAAStB,IACxBI,UAAU,gBAHd,SAKKT,kB,wCCrD/B4B,EAAa,uCAAG,WAAO7B,EAAO8B,EAAcC,GAA5B,iBAAAC,EAAA,+EAESC,IAAMC,KACzB,uGACA,CAAEC,EAAGnC,EAAOY,OAAQkB,GACpB,CAAEC,YAAaA,EAAYK,QALjB,uBAENC,EAFM,EAENA,KAFM,kBAQPA,EAAKA,KAAKC,aAAa,GAAGC,gBARnB,yDAUP,IAVO,yDAAH,0DA0CJC,EA5BG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAM1B,EAAe,EAAfA,SAAe,EACFO,mBAAS,IADP,mBAC/BoB,EAD+B,KACnBC,EADmB,KAoBtC,OAjBAC,qBAAU,WACN,GAAKH,EAAL,CAIA,IAAMV,EAAcE,IAAMY,YAAYC,SAItC,OAFAjB,EAAcY,EAAM1B,EAAUgB,GAAagB,KAAKJ,GAEzC,WACH,IACIZ,EAAYiB,SACd,MAAOC,SAEd,CAACR,EAAM1B,IAEVmC,QAAQC,IAAIT,GAER,gCACI,uBAAOhC,UAAU,QAAjB,oBACA,oBAAIA,UAAU,QAAd,SAAuBgC,QCVpBU,MAvBf,WAAgB,IAAD,EACW9B,mBAAS,IADpB,mBACNmB,EADM,KACAY,EADA,OAEmB/B,mBAAS,MAF5B,mBAENP,EAFM,KAEIuC,EAFJ,KAIb,OACE,gCACE,cAAC,EAAD,CACErD,MAAM,gBACNM,SAAU8C,EACV/C,MAAOmC,IAET,cAAC,EAAD,CACE1B,SAAUA,EACVC,iBAAkBsC,IAEpB,cAAC,EAAD,CACEb,KAAMA,EACN1B,SAAUA,QCpBlBwC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.71e634dd.chunk.js","sourcesContent":["// App.js\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n    container: {\n        margin: '10px 20px'\n    },\n    input: {\n        margin: '8px 0'\n    },\n    label: {\n        fontWeight: 700\n    },\n    title: {\n        marginTop: '10px'\n    }\n}));\n","// styles\nimport useStyles from '../styles';\n\nconst Field = ({ label, value, onChange }) => {\n    const styles = useStyles();\n    \n    return (\n        <div>\n            <label className={styles.label}>{label}</label>\n            <input\n                className='input'\n                value={value}\n                onChange={e => onChange(e.target.value)}\n            />\n        </div>\n    );\n};\n\nexport default Field;\n","import { useState } from 'react';\n\nconst LANGUAGES = [\n  { label: \"Afrikaans\", value: \"af\" },\n  { label: \"Arabic\", value: \"ar\" },\n  { label: \"Bengali\", value: \"bn\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"Hindi\", value: \"hi\" },\n  { label: \"Japanese\", value: \"ja\" },\n  { label: \"Portuguese\", value: \"pt\" },\n  { label: \"Russian\", value: \"ru\" },\n  { label: \"Simplified Chinese\", value: \"zh-CN\" },\n  { label: \"Spanish\", value: \"es\" },\n  { label: \"Swahili\", value: \"sw\" },\n  { label: \"Thai\", value: \"th\" }\n];\n\nconst Languages = ({ language, onLanguageChange }) => {\n    if (language === undefined) {\n        language = 'bn';\n    }\n\n    const languageConfig = LANGUAGES.find(l => l.value === language);\n    \n    if (!languageConfig) {\n        throw new Error(`Unknown language code '${language}'`);\n    }\n\n    const [open, setOpen] = useState(false);\n\n    const onSelect = language => {\n        setOpen(false);\n        onLanguageChange(language);\n    };\n\n    return (\n        <div>\n            <label className='label'>Select Language</label>\n            <div className={`dropdown ${open && 'is-active'}`}>\n                <div className='dropdown-trigger'>\n                    <button className='button' onClick={() => setOpen(!open)}>\n                        <span>{languageConfig.label} {'â†“'}</span>\n                        {/* <span className='icon is-small'>\n                            <i className='fas fa-angle-down' />\n                        </span> */}\n                    </button>\n                </div>\n                <div className='dropdown-menu'>\n                    <div className='dropdown-content'>\n                        {\n                            LANGUAGES.map(({ label, value }) => (\n                                <a\n                                    href='#'\n                                    onClick={() => onSelect(value)}\n                                    className='dropdown-item'\n                                >\n                                    {label}\n                                </a>\n                            ))\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Languages;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst doTranslation = async (input, languageCode, cancelToken) => {\n    try {\n        const { data } = await axios.post(\n            'https://translation.googleapis.com/language/translate/v2?key=AIzaSyCf0Xy0OnhxlduyEt3K8zP-sOuu-l_u6uA',\n            { q: input, target: languageCode },\n            { cancelToken: cancelToken.token }\n        );\n    \n        return data.data.translations[0].translatedText;\n    } catch (err) {\n        return '';\n    }\n};\n\nconst Translate = ({ text, language }) => {\n    const [translated, setTranslated] = useState('');\n\n    useEffect(() => {\n        if (!text) {\n            return;\n        }\n\n        const cancelToken = axios.CancelToken.source();\n\n        doTranslation(text, language, cancelToken).then(setTranslated);\n\n        return () => {\n            try {\n                cancelToken.cancel();\n            } catch (err) {}\n        };\n    }, [text, language]);\n\n    console.log(translated);\n    return (\n        <div>\n            <label className='label'>Output</label>\n            <h1 className='title'>{translated}</h1>\n        </div>\n    );\n};\n\nexport default Translate;\n","import { useState } from 'react';\n\n// components\nimport Field from './components/Field';\nimport Languages from './components/Languages';\nimport Translate from './components/Translate';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [language, setLanguage] = useState('bn');\n\n  return (\n    <div>\n      <Field\n        label='Enter English'\n        onChange={setText}\n        value={text}\n      />\n      <Languages\n        language={language}\n        onLanguageChange={setLanguage}\n      />\n      <Translate\n        text={text}\n        language={language}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}